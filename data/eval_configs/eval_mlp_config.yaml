use_gpu: true
run_name: "eval_mlp_hc_features_4p"
model_parameters:
  mlp:
    hidden_dims: [32, 32, 32]
    output_dim: 3
    mlp_dropout: 0.1
    norm: none
    mlp_softmax_function: "softmax" # Options: "softmax", "log_softmax", "none" (Default: "softmax")
training_parameters:
  batch_size: 1
  epochs: 500
  learning_rate: 0.0003
  lr_scheduler_params:
    scheduler: "OneCycleLR" # Options: "ReduceLROnPlateau", "CyclicLR", "OneCycleLR"
    params: # Give the parameters for the specific class you chose. Here you can find the documentation: https://pytorch.org/docs/stable/optim.html
      max_lr: 0.003
  loss: "crossentropy" # Options: "mse", "crossentropy", "nll", "weighted_mse"
  optimizer: "adam" # Options: "adam", "sgd"
  weight_decay: 0.000000
  balance_classes: true
  momentum: 0.1
  seed: 69
  batch_shuffle: false
  patience: 100000000
  log_image_frequency: 100
  n_folds: 0 # Set to 0 for no cross-validation
  n_test_initialisations: 20
  reported_set: "test"
dataset_parameters:
  class_name: glom_graph_dataset
  root: "/data/4_input_data_graphs/glob_graphs/"
  feature_file_path: "/data/3_extracted_features/EXC/glom_features.csv"
  annotations_path: "/data/1_cytomine_downloads/EXC/annotations/25/"
  validation_split: 0.0
  test_split: 0.15
  processed_file_name: "glom_graph"
  glom_graph:
    method: "knn" # Options: "knn", "radius", "delaunay"
    k: 0 # Options: "k", "radius", ""
  train_patients:
    - 001
    - 002
    - 003
    - 004
  test_patients:
    - 001
    - 002
    - 003
    - 004
  random_seed: 123
  onehot_targets: true
  process: true
  preprocessing_params:
    scaler: 'MinMaxScaler'
  feature_list:
    - 'Area (micronsÂ²)'
    - 'Perimeter (mm)'
    - 'circularity'
    - 'aspect_ratio'
    - 'eccentricity'
    - 'lbp_0'
    - 'lbp_1'
    - 'lbp_2'
    - 'lbp_3'
    - 'lbp_4'
    - 'lbp_5'
    - 'lbp_6'
    - 'lbp_7'
    - 'lbp_8'


