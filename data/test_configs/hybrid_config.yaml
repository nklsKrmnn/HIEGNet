use_gpu: true
run_name: "cnn_kernel4_2pot+128_gs"
model_parameters:
  hybrid:
    hidden_channels: [16, 32, 48, 96, 128]
    kernel_size: 4
    input_channels: 3
    stride: 2
    gnn_params:
      class_name: mlp
      input_dim: 128
      hidden_dims: [96,64,32]
      output_dim: 3
      mlp_dropout: gs
training_parameters:
  batch_size: 1
  epochs: 500
  learning_rate: 0.0003
  lr_scheduler_params:
    scheduler: "OneCycleLR" # Options: "ReduceLROnPlateau", "CyclicLR", "OneCycleLR"
    params: # Give the parameters for the specific class you chose. Here you can find the documentation: https://pytorch.org/docs/stable/optim.html
      max_lr: 0.0005
  loss: "crossentropy" # Options: "mse", "crossentropy", "nll"
  optimizer: "adam" # Options: "adam", "sgd"
  weight_decay: 0.000
  balance_classes: true
  momentum: 0.1
  seed: 69
  batch_shuffle: false
  patience: 10000
  log_image_frequency: 50
  n_folds: 4
  reported_set: 'val'
dataset_parameters:
  class_name: hybrid_graph_dataset
  root: "/data/4_input_data_graphs/"
  feature_file_path: "/data/3_extracted_features/EXC/glom_features.csv"
  image_file_path: "/data/3_extracted_features/EXC/image_paths_full.csv"
  annotations_path: "/data/1_cytomine_downloads/EXC/annotations/25/"
  validation_split: 0.15
  test_split: 0.15
  processed_file_name: "glom_graph"
  glom_graph:
    method: "knn" # Options: "knn", "radius", "delaunay"
    k: 0 # Options: "k", "radius", ""
  train_patients:
    - 001
  validation_patients:
    - 001
  test_patients:
    - 001
  random_seed: 123
  onehot_targets: true
  process: true
  hot_load: true
  preprocessing_params:
    scaler: 'MinMaxScaler'
  feature_list:
    - 'path_25'
    #- 'path_106'
    #- 'path_107'
    #- 'path_108'
