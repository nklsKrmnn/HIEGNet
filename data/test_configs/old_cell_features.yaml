use_gpu: true
model_parameters:
  mlp:
    input_dim: 10
    hidden_dim: 16
    output_dim: 3
training_parameters:
  batch_size: 1
  epochs: 1000
  learning_rate: 0.003
  #lr_scheduler_params:
  #  scheduler: "ReduceLROnPlateau" # Options: "ReduceLROnPlateau", "CyclicLR", "OneCycleLR"
  #  params: # Give the parameters for the specific class you chose. Here you can find the documentation: https://pytorch.org/docs/stable/optim.html
  #    mode: "min"
  loss: "crossentropy" # Options: "mse", "crossentropy", "nll"
  optimizer: "adam" # Options: "adam", "sgd"
  weight_decay: 0.0
  balance_classes: true
  momentum: 0.1
  seed: 42
  batch_shuffle: false
  patience: 10000
  log_image_frequency: 5
  n_folds: 0
dataset_parameters:
  class_name: glom_graph_dataset
  root: "/home/dascim/repos/histograph/data/input"
  feature_file_path: "/home/dascim/data/3_extracted_features/EXC/old_cell_features.csv"
  annotations_path: "/home/dascim/data/3_extracted_features/EXC/ann/"
  test_split: 0.2 # Is ignored if test_patients is set
  processed_file_name: "old_features_graph"
  train_patients:
    - 001
    - 002
  random_seed: 123
  onehot_targets: true
  process: true
  feature_list:
    - 'tcell _25_in'
    - 'tcell _25_out'
    - 'cd68_in'
    - 'cd163_in'
    - 'cd206_in'
    - 'ms4a4a_in'
    - 'cd68_out'
    - 'cd163_out'
    - 'cd206_out'
    - 'ms4a4a_out'
