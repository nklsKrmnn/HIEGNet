use_gpu: true
run_name: "full_model_optCNN_optGNN2_noJKhandfeat_mlr0005"
model_parameters:
  hetero_full_jk_model:
    cnn_params:
      hidden_channels: [16, 32, 48, 96] #output dim: 361
      kernel_size: 4
      input_channels: 3
      stride: 2
      cnn_softmax_function: "none" # Options: "softmax", "log_softmax", "none" (Default: "softmax")
      mlp_params:
        input_dim: 128
        hidden_dims: [64]
        output_dim: 32
        mlp_dropout: 0.55
        mlp_softmax_function: "none" # Options: "softmax", "log_softmax", "none" (Default: "softmax")
    hidden_dim: 64
    n_message_passings: 2
    n_fc_layers: 1
    norm_fc_layers: batch
    output_dim: 3
    dropout: gs
    norm: none
    softmax_function: "softmax" # Options: "softmax", "log_softmax", "none" (Default: "softmax")
    msg_passing_types:
      glom_to_glom: 'gcn'
      cell_to_glom: 'sage'
      cell_to_cell: 'gine'
training_parameters:
  batch_size: 1
  epochs: 900
  learning_rate: 0.0003
  lr_scheduler_params:
    scheduler: "OneCycleLR" # Options: "ReduceLROnPlateau", "CyclicLR", "OneCycleLR"
    params: # Give the parameters for the specific class you chose. Here you can find the documentation: https://pytorch.org/docs/stable/optim.html
      max_lr: 0.0005
  loss: "crossentropy" # Options: "mse", "crossentropy", "nll"
  optimizer: "adam" # Options: "adam", "sgd"
  weight_decay: 0.000000
  balance_classes: true
  momentum: 0.1
  seed: 69
  batch_shuffle: false
  patience: 100000000
  log_image_frequency: 100
  n_folds: 4 # Set to 0 for no cross-validation
  reported_set: "val"
dataset_parameters:
  class_name: full_graph_dataset
  root: "/data/4_input_data_graphs/glob_graphs/"
  feature_file_path: "/data/3_extracted_features/EXC/glom_features.csv"
  image_file_path: "/data/3_extracted_features/EXC/image_paths_full.csv"
  cell_node_dir_path: "/data/3_extracted_features/EXC/cell_nodes"
  annotations_path: "/data/1_cytomine_downloads/EXC/annotations/25/"
  validation_split: 0.15
  test_split: 0.15
  processed_file_name: "glom_graph"
  glom_graph:
    method: "knn" # Options: "knn", "radius", "delaunay"
    k: 0 # Options: "k", "radius", ""
  cell_graph:
    method: "knn" # Options: "knn", "radius", "delaunay"
    k: 5 # Options: "k", "radius", ""
  train_patients:
    - 001
  validation_patients:
    - 001
  test_patients:
    - 001
  random_seed: 123
  onehot_targets: true
  process: true
  hot_load: true
  preprocessing_params:
    scaler: 'MinMaxScaler'
  send_msg_from_glom_to_cell: true
  feature_list:
    - 'path_25'
    #- 'path_106'
    #- 'path_107'
    #- 'path_108'
    - 'Area (micronsÂ²)'
    - 'Perimeter (mm)'
    - 'circularity'
    - 'aspect_ratio'
    - 'eccentricity'
    - 'lbp_0'
    - 'lbp_1'
    - 'lbp_2'
    - 'lbp_3'
    - 'lbp_4'
    - 'lbp_5'
    - 'lbp_6'
    - 'lbp_7'
    - 'lbp_8'
  cell_types:
    - "M0"
    - "tcell"
  cell_features:
    - "area"
    - "perimeter"
    - "eccentricity"
    - "aspect_ratio"
    - "compactness"
    - "solidity"
    - "is_in_glom"
